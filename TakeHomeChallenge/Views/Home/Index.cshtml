@{
    ViewData["Title"] = "Time Entry";
}

@model TimeEntry

<div class="text-center">
    <p class="h3 mb-5">Time Entries</p>
    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
    {
        <div class="d-flex justify-content-between">
            <div class="d-flex flex-row align-items-start gap-3 mb-3 align-items-center">
                <div>
                    <label for="selectedName">Filter by:</label>
                    @Html.DropDownList("selectedName", (List<SelectListItem>)ViewData["EmployeeOptions"]!, 
                        "All", new { onchange = "this.form.submit()" })
                </div>
                <div>
                    @Html.DropDownList("selectedDate", (List<SelectListItem>)ViewData["DateOptions"]!,
                        "All", new { onchange = "this.form.submit()" })
                </div>
                <div>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-secondary btn-sm">
                        Clear Filters
                    </a>
                </div>
            </div>
            <div>
                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addTimeEntryModal">
                    Add Time Entry
                </button>
            </div>
        </div>
    }
    <div class="card" style="max-height: 40em; overflow-y: auto;">
        <table class="table table-striped">
            <thead style="position: sticky; top: 0;">
                <tr>
                    <th scope="col">
                        Name
                    </th>
                    <th scope="col">
                        Date
                    </th>
                    <th scope="col">
                        In Time
                    </th>
                    <th scope="col">
                        Out Time
                    </th>
                    <th scope="col">
                        Total Hours
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var detail in (List<(string name, TimeEntry timeEntry)>)ViewData["TimeEntryDetails"]!)
                {
                    <tr>
                        <td>
                            @detail.name
                        </td>
                        <td scope="row">
                            @($"{detail.timeEntry.Date:d}")
                        </td>
                        <td scope="row">
                            @($"{detail.timeEntry.InTime:h\\:mm}")
                        </td>
                        <td scope="row">
                            @($"{detail.timeEntry.OutTime:h\\:mm}")
                        </td>
                        <td scope="row">
                            @(Math.Round((detail.timeEntry.OutTime - detail.timeEntry.InTime).TotalHours, 3))
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="modal fade" id="addTimeEntryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="SaveEntry" asp-controller="Home" method="post">
                    <div class="modal-header justify-content-center">
                        <h5 class="modal-title">Add Time Entry</h5>
                    </div>
                    <div class="modal-body">
                        <div class="d-flex mb-3 gap-3 align-items-center container-md">
                            <label for="employeeSelect" class="form-label">Employee</label>
                            @Html.DropDownList("EmployeeName", (List<SelectListItem>)ViewData["EmployeeOptions"]!,
                            "Select an employee", new { @class = "form-select", id = "employeeSelect" })
                        </div>
                        <div class="d-flex mb-3 gap-3 align-items-center container-md">
                            <label asp-for="Date" class="form-label">Date</label>
                            <input asp-for="Date" type="date" class="form-control" required />
                        </div>
                        <span asp-validation-for="Date" class="text-danger"></span>
                        <div class="d-flex mb-3 gap-3 align-items-center container-md">
                            <label asp-for="InTime" class="form-label">In Time</label>
                            <input asp-for="InTime" type="time" class="form-control" required />
                        </div>
                        <span asp-validation-for="InTime" class="text-danger"></span>
                        <div class="d-flex mb-3 gap-3 align-items-center container-md">
                            <label asp-for="OutTime" class="form-label">Out Time</label>
                            <input asp-for="OutTime" type="time" class="form-control" required />
                        </div>
                    </div>
                    <div class="modal-footer d-flex justify-content-between">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Script {
    @if (ViewData["ShowModal"] != null && (bool)ViewData["ShowModal"]!)
    {
        <script>
            var modal = new bootstrap.Modal(document.getElementById('addTimeEntryModal'));
            modal.show();
        </script>
    }
}